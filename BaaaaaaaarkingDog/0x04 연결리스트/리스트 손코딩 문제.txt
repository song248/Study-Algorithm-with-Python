문) 원형 연결 리스트 내의 임의의 노드 하나가 주어졌을 때 해당 List의 길이를 효율적으로 구하는 방법?

답) 동일한 노드가 나올때 까지 계속 다음 노드로 -> 공간복잡도 O(1), 시간복잡도 O(N)


문) 중간에 만나는 두 연결 리스트의 시작점들이 주어졌을 때 만나는 지점을 구하는 방법?

답) 각각의 길이를 구하고, 두 리스트 길이의 차이를 구한 다음, 차이만큼 긴 리스트를 먼저 이동시킨 후, 만날때까지 한칸씩 같이 이동, 공간복잡도 O(1), 시간복잡도 O(A+B)


문) 주어진 연결 리스트 안에 사이클이 있는지 판단

답) Floyd's cycle-finding algorithm
한 칸씩 가는 커서와 두 칸씩 가는 커서를 동일한 시작점에서 출발시키면 사이클이 있을 경우 두 커서는 반드시 만난다. 반대로 만약 사이클이 없으면 두 커서가 만나지 못하고 연결 리스트의 끝에 도달
공간복잡도 O(1)